version: "3.4"
services:
  # POSTGIS
  postgis:
    image: postgis/postgis:13-3.3
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # PIPELINE
  pipeline:
    restart: "no"
    environment:
      - DJANGO_SECRET_KEY=local
      - ENV=DEV
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgis
      - POSTGRES_CHECK_TIMEOUT=120
    build:
      context: pipeline
    volumes:
      - ./pipeline:/perpetual/pipeline
      - ./data:/perpetual/data
    depends_on:
      - postgis
      - pgadmin
    env_file:
      - .env
    ports:
      - "8080:8080"

  # DJANGO-Q2
  django-q2:
    restart: "no"
    environment:
      - DJANGO_SECRET_KEY=local
      - ENV=DEV
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgis
      - POSTGRES_CHECK_TIMEOUT=120
    build:
      context: pipeline
    command: ["bash", "setup.sh", "--migrate", "--use_djangoq"]
    volumes:
      - ./pipeline:/perpetual/pipeline
      - ./data:/perpetual/data
    depends_on:
      - postgis
      - pgadmin
    env_file:
      - .env
    profiles:
      - full-stack

  # PGADMIN DATABASE GUI
  pgadmin:
    depends_on:
      - postgis
    image: dpage/pgadmin4
    platform: ${DOCKER_PLATFORM}
    environment:
      - COMPOSE_HTTP_TIMEOUT=300
      - PGADMIN_DEFAULT_EMAIL=admin@pgadmin.com
      - PGADMIN_DEFAULT_PASSWORD=p@sssw0rd!123
      - PGADMIN_LISTEN_PORT=443
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "443:443"
    volumes:
      - ./server.local.json:/pgadmin4/servers.json
    logging:
      driver: none

  # WEB
  web:
    build:
      context: web
    depends_on:
      - postgis
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./web:/app
      - /app/node_modules
      - /app/.next
    profiles:
      - full-stack
