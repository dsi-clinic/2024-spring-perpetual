generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              Int             @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.Timestamptz(6)
  is_superuser               Boolean
  username                   String                       @unique @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.Timestamptz(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]

  @@index([username], map: "auth_user_username_6821ab7c_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_groups {
  id         Int        @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544")
  @@index([user_id], map: "auth_user_groups_user_id_6a12ed8b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_user_permissions {
  id              Int             @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "auth_user_user_permissions_user_id_a95ead1b")
}

model default_cache {
  cache_key String   @id @db.VarChar(255)
  value     String
  expires   DateTime @db.Timestamptz(6)

  @@index([expires], map: "default_cache_expires")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      Int      @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}

model django_q_ormq {
  id      Int       @id @default(autoincrement())
  key     String    @db.VarChar(100)
  payload String
  lock    DateTime? @db.Timestamptz(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model django_q_schedule {
  id                  Int       @id @default(autoincrement())
  func                String    @db.VarChar(256)
  hook                String?   @db.VarChar(256)
  args                String?
  kwargs              String?
  schedule_type       String    @db.VarChar(2)
  repeats             Int
  next_run            DateTime? @db.Timestamptz(6)
  task                String?   @db.VarChar(100)
  name                String?   @db.VarChar(100)
  minutes             Int?      @db.SmallInt
  cron                String?   @db.VarChar(100)
  cluster             String?   @db.VarChar(100)
  intended_date_kwarg String?   @db.VarChar(100)
}

model django_q_task {
  name          String   @db.VarChar(100)
  func          String   @db.VarChar(256)
  hook          String?  @db.VarChar(256)
  args          String?
  kwargs        String?
  result        String?
  started       DateTime @db.Timestamptz(6)
  stopped       DateTime @db.Timestamptz(6)
  success       Boolean
  id            String   @id @db.VarChar(32)
  group         String?  @db.VarChar(100)
  attempt_count Int
  cluster       String?  @db.VarChar(100)

  @@index([id], map: "django_q_task_id_32882367_like")
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model foodware_project {
  id                   Int                    @id @default(autoincrement())
  created_at_utc       DateTime               @db.Timestamptz(6)
  last_updated_at_utc  DateTime               @db.Timestamptz(6)
  name                 String                 @db.VarChar
  description          String?
  locale_id            Int
  locale               locale                 @relation(fields: [locale_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "foodware_project_locale_id_9e89f93e_fk_locale_id")
  foodware_project_bin foodware_project_bin[]
  foodware_project_job foodware_project_job[]
  poi_cache            poi_cache[]

  @@index([locale_id], map: "foodware_project_locale_id_9e89f93e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model foodware_project_bin {
  id                  Int                     @id @default(autoincrement())
  created_at_utc      DateTime                @db.Timestamptz(6)
  last_updated_at_utc DateTime                @db.Timestamptz(6)
  external_id         String                  @db.VarChar
  classification      String                  @db.VarChar
  name                String                  @db.VarChar
  external_categories Json
  formatted_address   String                  @db.VarChar
  coords              Unsupported("geometry")
  notes               String
  features            Json?
  project_id          Int
  parent_category_id  Int
  provider_id         Int
  poi_parent_category poi_parent_category     @relation(fields: [parent_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "foodware_project_bin_parent_category_id_a5553b42_fk_poi_paren")
  foodware_project    foodware_project        @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "foodware_project_bin_project_id_5ceed39a_fk_foodware_project_id")
  poi_provider        poi_provider            @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "foodware_project_bin_provider_id_ce63175c_fk_poi_provider_id")

  @@unique([project_id, provider_id, external_id, name, formatted_address], map: "unique_foodware_project_bin")
  @@index([coords], map: "foodware_project_bin_coords_40b2a9b5_id", type: Gist)
  @@index([parent_category_id], map: "foodware_project_bin_parent_category_id_a5553b42")
  @@index([project_id], map: "foodware_project_bin_project_id_5ceed39a")
  @@index([provider_id], map: "foodware_project_bin_provider_id_ce63175c")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model foodware_project_job {
  id                  Int              @id @default(autoincrement())
  created_at_utc      DateTime         @db.Timestamptz(6)
  last_updated_at_utc DateTime         @db.Timestamptz(6)
  type                String           @db.VarChar
  status              String           @db.VarChar
  last_error          Json
  project_id          Int
  foodware_project    foodware_project @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "foodware_project_job_project_id_a8a2324b_fk_foodware_project_id")

  @@index([project_id], map: "foodware_project_job_project_id_a8a2324b")
}

model locale {
  id               Int                      @id @default(autoincrement())
  name             String                   @unique(map: "unique_locale") @db.VarChar
  geometry         Unsupported("geometry")
  name_vector      Unsupported("tsvector")? @default(dbgenerated("to_tsvector('english'::regconfig, (name)::text)"))
  foodware_project foodware_project[]

  @@index([geometry], map: "locale_geometry_fb4c6944_id", type: Gist)
  @@index([name_vector], map: "name_vector_idx", type: Gin)
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model poi_cache {
  id                  Int                 @id @default(autoincrement())
  created_at_utc      DateTime            @db.Timestamptz(6)
  last_updated_at_utc DateTime            @db.Timestamptz(6)
  data                Json
  project_id          Int
  parent_category_id  Int
  provider_id         Int
  poi_parent_category poi_parent_category @relation(fields: [parent_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "poi_cache_parent_category_id_da8a16ff_fk_poi_parent_category_id")
  foodware_project    foodware_project    @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "poi_cache_project_id_590b2467_fk_foodware_project_id")
  poi_provider        poi_provider        @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "poi_cache_provider_id_b8ffaf0c_fk_poi_provider_id")

  @@unique([project_id, provider_id, parent_category_id], map: "unique_poi_cache_item")
  @@index([parent_category_id], map: "poi_cache_parent_category_id_da8a16ff")
  @@index([project_id], map: "poi_cache_project_id_590b2467")
  @@index([provider_id], map: "poi_cache_provider_id_b8ffaf0c")
}

model poi_parent_category {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @unique(map: "unique_poi_parent_category") @db.VarChar
  foodware_project_bin  foodware_project_bin[]
  poi_cache             poi_cache[]
  poi_provider_category poi_provider_category[]
}

model poi_provider {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @unique(map: "unique_poi_provider") @db.VarChar
  foodware_project_bin  foodware_project_bin[]
  poi_cache             poi_cache[]
  poi_provider_category poi_provider_category[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model poi_provider_category {
  id                  Int                 @id @default(autoincrement())
  name                String              @db.VarChar
  active              Boolean
  parent_id           Int
  provider_id         Int
  poi_parent_category poi_parent_category @relation(fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "poi_provider_categor_parent_id_348b21f3_fk_poi_paren")
  poi_provider        poi_provider        @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "poi_provider_category_provider_id_27557081_fk_poi_provider_id")

  @@unique([provider_id, name], map: "unique_poi_provider_category")
  @@index([parent_id], map: "poi_provider_category_parent_id_348b21f3")
  @@index([provider_id], map: "poi_provider_category_provider_id_27557081")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}
