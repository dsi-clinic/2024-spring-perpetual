[pipeline] ; variables shared through the entire pipeline
; 0. draw from truth dataframe and distance matrix
truth_df_path = ../data/toy_pts_30.csv
truth_dists_path = ../data/toy_dists_30.csv
; 1. run cvrp to find pickup loops
cvrp_pickups_dir = ../data/outputs/toy_routes/pickups_only/
; 2. with resulting routes, segment/order truth dataframe and distance matrix
segmented_dir = ../data/outputs/toy_segmented_pickups/
; segmented_dists_dir = ../data/outputs/toy_segmented_pickups/
; 3. combine pickup and dropoff demands into one column (method: duplicate rows)
; combined_df_path = ../data/outputs/toy_comb_and_seg_pickups/cns_pts.csv
; combined_dists_path = ../data/outputs/toy_comb_and_seg_pickups/cns_dists.csv
combined_dir = ../data/outputs/toy_comb_and_seg_pickups/
; 4. run cvrp on segmented and combined data
cvrp_dropoffs_dir = ../data/outputs/toy_routes/pickups_and_dropoffs/

[solve.pickups_only] ; 1. solve cvrp for pickups only
truth_df_path = ${pipeline:truth_df_path}
truth_dists_path = ${pipeline:truth_dists_path}
depot_index = 0
num_vehicles = 5
vehicle_capacity = 10
sim_duration = 30
capacity_col = Daily_Pickup_Totes
cvrp_pickups_dir = ${pipeline:cvrp_pickups_dir}

[segment.pickup_loops] ; 2. from pickup loops, segment/order df and dists
truth_df_path = ${pipeline:truth_df_path}
truth_dists_path = ${pipeline:truth_dists_path}
pickup_routes_dir = ${pipeline:cvrp_pickups_dir}
; seg_df_dir = ${pipeline:seg_df_dir}
; seg_dists_dir = ${pipeline:seg_dists_dir}
segmented_dir = ${pipeline:segmented_dir}

[combine.pickups_and_dropoffs] ; 3. combine dropoffs and pickups into one column
; segmented_df_path = ${pipeline:seg_df_path}
; segmented_dists_path = ${pipeline:seg_dists_path}
segmented_dir = ${pipeline:segmented_dir}
; combined_df_path = ${pipeline:combined_df_path}
; combined_dists_path = ${pipeline:combined_dists_path}
combined_dir = ${pipeline:combined_dir}

[solve.pickups_and_dropoffs] ; 4. run intra-route dropoffs and pickups
; combined_df_path = ${pipeline:combined_df_path}
; combined_dists_path = ${pipeline:combined_dists_path}
combined_dir = ${pipeline:combined_dir}
num_vehicles = 1
vehicle_capacity = ${solve.pickups_only:vehicle_capacity}
sim_duration = ${solve.pickups_only:sim_duration}
depot_index = 0
capacity_col = Capacity
combined_routes_dir = ${pipeline:cvrp_dropoffs_dir}

[viz.route] ; 5. visualize routes
place = Galveston, TX
; route_dir = ../data/outputs/routes/pickups_only/
route_dir = ${pipeline:cvrp_dropoffs_dir}
latitude = 29.30135
longitude = -94.7977
colors = ['blue', 'red', 'green', 'orange', 'purple',
	'darkblue', 'pink', 'white',  'darkred', 'lightgreen',
	'lightgray', 'gray', 'lightred', 'black', 'cadetblue',
	'darkgreen', 'beige', 'darkpurple', 'lightblue', ]